RateLimit....

pointer to variable to be ratelimited... and the condition for which ratelimiting occurs


RateLimit should process all threads? not sure, we'll see how it is performance
wise on a small amount of threads first, we don't want any deadlocks....

should an object inform RateLimit that it's variable has increased?

IMO best way would be just to poll every 500ms and then check value of each pointer
then if pointer=RATE_LIMIT, reset. in this case, we need to notify the object
that it has been ratelimited, maybe just a delegate.
  - rebuttal: X fields * Y objects
  - do we wait until all fields are checked before ratelimiting the object,
    or do we ratelimit right away? dun dun dun...

* null ptr's can potentially cause fatal exceptions

more configurable implentation: each object has it's RateLimit object, but with
the least configured RateLimit settings, it inherits from it's parent(by domain?)
then we can modify the children if we or user's setting dictate.

second implementation: each object has ratelimit object, we call function to increase
that variable's value, ratelimit object will then notify if OK to continue, or NOT OK
then which the object will ratelimit.


